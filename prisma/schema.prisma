// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Review    Review[]
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id              String      @id @default(cuid())
  name            String
  description     String?
  price           Float
  salePrice       Float?
  stock           Int         @default(0)
  sold            Int         @default(0)
  images          String[]
  categoryId      String
  category        Category    @relation(fields: [categoryId], references: [id])
  nutritionalInfo String?
  ingredients     String?
  brandId         String? // Thêm trường brandId
  brand           Brand?      @relation(fields: [brandId], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  orderItems      OrderItem[]
  Review          Review[]
}

model Brand {
  id          String    @id @default(cuid())
  name        String
  description String?
  logo        String?
  website     String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id               String      @id @default(cuid())
  userId           String?
  fullName         String?
  orderCode        String?     @unique
  paid             Boolean     @default(false)
  status           OrderStatus @default(PENDING)
  total            Float
  shippingAddress  String
  shippingProvince String
  shippingDistrict String
  shippingWard     String
  phone            String
  expireBankingAt  DateTime?
  email            String?
  paymentMethod    String
  notes            String?
  shipCode         String?
  carrier          String?
  websiteCarrier   String?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  items            OrderItem[]
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum ReviewStatus {
  ACTIVE
  INACTIVE
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  userId    String   @default("")
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  category  String
  content   String
  excerpt   String?
  image     String?
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String       @id @default(cuid())
  userId    String
  status    ReviewStatus @default(ACTIVE)
  user      User         @relation(fields: [userId], references: [id])
  productId String
  product   Product      @relation(fields: [productId], references: [id])
  content   String
  rating    Int
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}
